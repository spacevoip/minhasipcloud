/**
 * TESTE FORMATAÃ‡ÃƒO DE TELEFONES - Verificar conversÃ£o automÃ¡tica
 */

const smsService = require('./src/services/smsService');

console.log('ðŸ“± TESTE DE FORMATAÃ‡ÃƒO DE TELEFONES BRASILEIROS\n');
console.log('Cliente digita â†’ Sistema converte para seven.io\n');

const testCases = [
  // Formatos que o cliente pode digitar
  { input: '(19) 99565-2552', description: 'Formato com mÃ¡scara completa' },
  { input: '19 99565-2552', description: 'Formato com espaÃ§o' },
  { input: '1999565-2552', description: 'Formato com hÃ­fen' },
  { input: '19995652552', description: 'Apenas nÃºmeros com DDD' },
  { input: '(11) 98765-4321', description: 'SÃ£o Paulo com mÃ¡scara' },
  { input: '11987654321', description: 'SÃ£o Paulo apenas nÃºmeros' },
  { input: '987654321', description: 'Celular sem DDD (assume SP)' },
  { input: '87654321', description: 'Fixo sem DDD (assume SP)' },
  { input: '5519995652552', description: 'JÃ¡ com cÃ³digo do paÃ­s' },
  { input: '+5519995652552', description: 'JÃ¡ formatado internacional' },
];

testCases.forEach((testCase, index) => {
  const formatted = smsService.formatPhoneNumber(testCase.input);
  console.log(`${(index + 1).toString().padStart(2, '0')}. ${testCase.description}`);
  console.log(`    Cliente: ${testCase.input.padEnd(20)} â†’ API: ${formatted}`);
  console.log('');
});

console.log('âœ… Todos os formatos sÃ£o convertidos automaticamente para +55DDNNNNNNNNN');
console.log('âœ… O cliente nunca precisa digitar +55');
console.log('âœ… Sistema aceita qualquer formato brasileiro comum');

// Fechar conexÃµes se houver
process.exit(0);
